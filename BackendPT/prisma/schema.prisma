datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model ImgSlide {
  id      Int    @id @default(autoincrement())
  detail  String
  imgPath String
}

model FilePT {
  id       Int    @id @default(autoincrement())
  name     String
  filePath String
}

model Data {
  D_id   Int    @id @default(autoincrement())
  P_id   Int
  P_data String @db.Text // Use @db.Text to specify a large text field in PostgreSQL

  Page Page @relation(fields: [P_id], references: [P_id], name: "PageToData")

  @@index([P_id])
}

model Page {
  P_id   Int    @id @default(autoincrement())
  P_name String
  Data   Data[] @relation("PageToData")

  Image Image[] @relation(name: "PageToImages")

  Company Company[] @relation(name: "PageToCompany")

  news news[] @relation(name: "PageToNews")
}

model Company {
  C_id              Int               @id @default(autoincrement())
  P_id              Int
  C_index           Int               @default(autoincrement())
  C_name            String
  C_logo            String
  C_salary          String
  C_pic             String
  C_detail          String
  status            Boolean           @default(false)
  C_companyMajor    String[] // Relation to the join table
  C_companyWorkType String[]
  // Page              Page              @relation(fields: [P_id], references: [P_id], name: "PageToCompany")
  Address           Address[]         @relation(name: "AddressToCompany")

  Page Page[] @relation(name: "PageToCompany")
}

model Address {
  A_id         Int     @id @default(autoincrement())
  C_id         Int
  A_address    String
  A_subdist    String
  A_dist       String
  A_province   String
  A_post       String
  A_email      String
  A_tel        String
  A_coordinate String
  Company      Company @relation(fields: [C_id], references: [C_id], name: "AddressToCompany")
}

// model Major {
//   M_id         Int            @id @default(autoincrement())
//   M_name       String
//   CompanyMajor CompanyMajor[] // Relation to the join table
// }

// model Worktype {
//   WT_id           Int               @id @default(autoincrement())
//   WT_name         String
//   CompanyWorkType CompanyWorkType[] // Relation to the join table
// }

// model CompanyMajor {
//   CM_id     Int
//   M_id      Int
//   Company   Company @relation(fields: [CM_id], references: [C_id]) // Corrected reference to C_id
//   Major     Major   @relation(fields: [M_id], references: [M_id]) // Corrected reference to M_id

//   @@id([CM_id, M_id]) // Composite primary key
// }

// model CompanyWorkType {
//   CWT_id     Int
//   WT_id      Int
//   Company    Company  @relation(fields: [CWT_id], references: [C_id]) // Corrected reference to C_id
//   Worktype   Worktype @relation(fields: [WT_id], references: [WT_id]) // Corrected reference to M_id

//   @@id([WT_id, CWT_id]) // Composite primary key
// }

model Image {
  IMG_id  Int     @id @default(autoincrement())
  P_id    Int
  imgPath String
  status  Boolean @default(false)
  Page    Page    @relation(fields: [P_id], references: [P_id], name: "PageToImages")
}

model news {
  link_id  Int     @id @default(autoincrement())
  P_id     Int
  Url      String
  Url_name String
  imgPath  String
  status   Boolean @default(false)
  Page     Page    @relation(fields: [P_id], references: [P_id], name: "PageToNews")
}
